# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
env:
  # GitHub settings
  REGISTRY: ghcr.io/liquality
  # ethereum-indexer-api
  API_IMAGE_NAME: 'liquality-evm-refund'
  API_IMAGE_TAG: 'latest'
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Clone liquality-evm-refund
        uses: actions/checkout@v2
        with:
          repository: liquality/liquality-evm-refund.git
          ref: 'master'
  
      - name: Install Dependencies
        run: yarn install

      - name: Build
        run: yarn build     
  
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build, tag, and push Docker image
      - name: Build, tag, push image to GitHub
        id: build-api-image
        run: |
          echo "Building and tagging Docker image ($API_IMAGE_NAME)"
          docker build -f Dockerfile -t $API_IMAGE_NAME . --no-cache
          docker tag $API_IMAGE_NAME:$API_IMAGE_TAG $REGISTRY/$API_IMAGE_NAME:$API_IMAGE_TAG
          echo "Pushing image to registry as: $REGISTRY/$API_IMAGE_NAME"
          docker push $REGISTRY/$API_IMAGE_NAME:$API_IMAGE_TAG
